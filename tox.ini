# ===============================================
# NIDS Autoencoder Project - Tox Configuration
# ===============================================

[tox]
minversion = 4.0
envlist = 
    py{38,39,310,311}
    flake8
    mypy
    black
    isort
    bandit
    safety
    docs
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
commands = 
    pytest {posargs:tests/}
setenv =
    PYTHONPATH = {toxinidir}/src
    TESTING = true
    ENVIRONMENT = test
passenv = 
    CI
    GITHUB_*
    COVERAGE_*
allowlist_externals = 
    echo
    rm
    mkdir

[testenv:py38]
basepython = python3.8

[testenv:py39]
basepython = python3.9

[testenv:py310]
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:flake8]
deps = 
    flake8>=6.0.0
    flake8-docstrings
    flake8-bugbear
    flake8-comprehensions
    flake8-simplify
    flake8-pytest-style
commands = 
    flake8 src tests

[testenv:mypy]
deps = 
    mypy>=1.0.0
    types-all
commands = 
    mypy src

[testenv:black]
deps = 
    black>=23.1.0
commands = 
    black --check --diff src tests

[testenv:isort]
deps = 
    isort>=5.12.0
commands = 
    isort --check-only --diff src tests

[testenv:bandit]
deps = 
    bandit[toml]>=1.7.0
commands = 
    bandit -r src -f json -o {toxworkdir}/bandit-report.json
    bandit -r src

[testenv:safety]
deps = 
    safety>=2.3.0
commands = 
    safety check --json --output {toxworkdir}/safety-report.json
    safety check

[testenv:docs]
deps = 
    sphinx>=6.1.0
    sphinx-rtd-theme>=1.2.0
    myst-parser>=0.19.0
changedir = docs
commands = 
    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html

[testenv:coverage]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
    coverage[toml]>=7.2.0
commands = 
    coverage erase
    coverage run -m pytest {posargs:tests/}
    coverage report
    coverage html
    coverage xml

[testenv:benchmark]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
    pytest-benchmark>=4.0.0
commands = 
    pytest tests/benchmarks/ --benchmark-only

[testenv:integration]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
    docker
commands = 
    pytest tests/integration/ -v

[testenv:e2e]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
    requests
commands = 
    pytest tests/e2e/ -v

[testenv:lint]
deps = 
    pylint>=2.16.0
commands = 
    pylint src

[testenv:format]
deps = 
    black>=23.1.0
    isort>=5.12.0
commands = 
    black src tests
    isort src tests

[testenv:check]
deps = 
    -r{toxinidir}/requirements-dev.txt
commands = 
    black --check src tests
    isort --check-only src tests
    flake8 src tests
    mypy src
    bandit -r src
    safety check

[testenv:clean]
deps = 
skip_install = true
commands = 
    rm -rf build/
    rm -rf dist/
    rm -rf *.egg-info/
    rm -rf .pytest_cache/
    rm -rf .mypy_cache/
    rm -rf .coverage
    rm -rf htmlcov/
    rm -rf .tox/

[flake8]
max-line-length = 88
max-complexity = 10
exclude = 
    .git,
    __pycache__,
    .venv,
    venv,
    .tox,
    build,
    dist,
    *.egg-info,
    docs
ignore = 
    E203,
    W503,
    E501
per-file-ignores = 
    __init__.py:F401
    tests/*:D,S101

[coverage:run]
source = src
branch = true
parallel = true
omit = 
    */tests/*
    */test_*
    */__init__.py
    setup.py

[coverage:report]
show_missing = true
skip_covered = false
fail_under = 80
exclude_lines = 
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[coverage:html]
directory = htmlcov
title = NIDS Autoencoder Coverage Report

[coverage:xml]
output = coverage.xml
